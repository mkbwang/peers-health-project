#!/bin/bash
# insta485db

# Stop on errors
set -e

# Sanity check command line options
usage() {
  echo "Usage: $0 (create|destroy|reset|head)"
}

if [ $# -ne 1 ]; then
  usage
  exit 1
fi

# Parse argument.  $1 is the first argument
case $1 in
  "create")
    if [ -f ODG.sqlite3 ]; then
      echo "Error: database already exists"
    else
      sqlite3 ODG.sqlite3 < setup.sql
      python3 prep.py
      echo "+ python3 prep.py"
    fi
    ;;

  "destroy")
    rm -rf ODG.sqlite3
    echo "+ rm -rf ODG.sqlite3"
    ;;

  "reset")
    rm -rf ODG.sqlite3
    echo "+ rm -rf ODG.sqlite3"
    sqlite3 ODG.sqlite3 < setup.sql
    echo "+ sqlite3 ODG.sqlite3 < setup.sql"
    python3 prep.py
    echo "+ python3 prep.py"
    ;;

  "head")
    if [ ! -f ODG.sqlite3 ]; then
        echo "Error: No database!"
    else
        echo "+ sqlite3 -batch -line ODG.sqlite3 'SELECT * FROM patients LIMIT 5'"
        sqlite3 -batch -line ODG.sqlite3 'SELECT * FROM patients LIMIT 5'
        echo "+ sqlite3 -batch -line ODG.sqlite3 'SELECT * FROM ICD9 LIMIT 5'"
        sqlite3 -batch -line ODG.sqlite3 'SELECT * FROM ICD9 LIMIT 5'
        echo "+ sqlite3 -batch -line ODG.sqlite3 'SELECT * FROM PC LIMIT 5'"
        sqlite3 -batch -line ODG.sqlite3 'SELECT * FROM PC LIMIT 5'
        echo "+ sqlite3 -batch -line ODG.sqlite3 'SELECT * FROM OT LIMIT 5'"
        sqlite3 -batch -line ODG.sqlite3 'SELECT * FROM OT LIMIT 5'
    fi
    ;;
  *)
    usage
    exit 1
    ;;
esac
